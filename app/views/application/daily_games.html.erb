<%= content_for :head do %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chessground@9.1.1/assets/chessground.base.css"/>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chessground@9.1.1/assets/chessground.brown.css"/>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chessground@9.1.1/assets/chessground.cburnett.css"/>
  <style>
      .chessground {
          width: 400px;
          height: 400px;
      }
      .game {
          margin-right: 20px;
          display: inline-block;
      }
  </style>
  <script type="module">
      import { Chessground } from 'https://cdn.jsdelivr.net/npm/chessground@9.1.1/dist/chessground.min.js';

      const playerName = '<%= @username %>';

      async function fetchGames() {
          const response = await fetch(`https://api.chess.com/pub/player/${playerName}/games`);
          const data = await response.json();
          return data.games;
      }

      function filterMyTurnGames(games) {
          return games.filter(game => (game.turn === 'white' && game.white.includes(playerName)) || (game.turn === 'black' && game.black.includes(playerName)));
      }

      function filterTheirTurnGames(games) {
          const myTurnGames = filterMyTurnGames(games)
          const myTurnUrls = myTurnGames.map((game) => game.url);
          return games.filter((game) => !myTurnUrls.includes(game.url));
      }

      function generateGameLinks(games, container) {
          if (games.length === 0) {
              container.innerHTML = 'None to display';
              return;
          }
          games.forEach(game => {
              const lastActivity = game.last_activity;
              const url = game.url;
              const existingGame = document.getElementById(url);
              console.log({existingGame})
              if (existingGame) {
                  if (parseInt(existingGame.dataset.lastActivity) === lastActivity) {
                      console.log(`No update for ${url}`)
                      return;
                  } else {
                      console.log(`Update found for ${url}, removing from DOM to create again`)
                      existingGame.parentNode.removeChild(existingGame);
                  }
              }
              const gameContainer = document.createElement('div');
              gameContainer.classList.add('game');
              gameContainer.id = game.url;
              gameContainer.dataset.lastActivity = lastActivity;
              const link = document.createElement('a');
              link.href = game.url;
              link.target = '_blank';

              const moveNumber = game.fen.split(' ')[5];
              const myColor = game.white.includes(playerName) ? 'white' : 'black';
              const opponentColor = myColor === 'white' ? 'black' : 'white';
              const opponent = game[opponentColor].split('/').pop();

              link.textContent = `Game against ${opponent}, playing as ${myColor}, move number ${moveNumber}`;

              const lineBreak = document.createElement('br');

              const board = document.createElement('div');
              board.id = game.url;
              board.classList.add('chessground');
              const boardConfig = {
                  orientation: myColor,
                  fen: game.fen,
                  moveable: {
                      free: false
                  },
              };

              gameContainer.appendChild(link);
              gameContainer.appendChild(board);
              gameContainer.appendChild(lineBreak);
              container.appendChild(gameContainer);

              setTimeout(() => {
                  Chessground(board, boardConfig);
              });
          });
      }

      async function updateGames() {
          const games = await fetchGames();
          const myTurnGames = filterMyTurnGames(games);
          const myTurnContainer = document.getElementById('gameLinks_myTurn')
          generateGameLinks(myTurnGames, myTurnContainer);
          const theirTurnGames = filterTheirTurnGames(games);
          const theirTurnContainer = document.getElementById('gameLinks_theirTurn')
          generateGameLinks(theirTurnGames, theirTurnContainer);
          document.title = `${myTurnGames.length} Games`;
          setTimeout(updateGames, 5 * 1000);
      }


      document.addEventListener('DOMContentLoaded', async () => {
          await updateGames();
      });
  </script>
<% end %>
<h1>Daily Games</h1>
<h2>My Turn</h2>
<div id="gameLinks_myTurn"></div>
<h2>Their Turn</h2>
<div id="gameLinks_theirTurn"></div>
