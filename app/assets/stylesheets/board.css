.main-board .cg-wrap, cg-board {
    position: absolute;
    width: 100%;
    height: 100%
}

body[data-board=blue] .is2d cg-board::before {
    background-image: url("../images/board/svg/blue.svg")
}

body[data-board=blue] .is2d coords {
    ---cg-ccw: #dee3e6;
    ---cg-ccb: #788a94;
    ---cg-cs: none
}

body[data-board=blue2] .is2d cg-board::before {
    background-image: url("../images/board/blue2.jpg")
}

body[data-board=blue2] .is2d coords {
    ---cg-ccw: #97b2c7;
    ---cg-ccb: #546f82;
    ---cg-cs: none
}

body[data-board=blue3] .is2d cg-board::before {
    background-image: url("../images/board/blue3.jpg")
}

body[data-board=blue3] .is2d coords {
    ---cg-ccw: #d9e0e6;
    ---cg-ccb: #315991;
    ---cg-cs: none
}

body[data-board=blue-marble] .is2d cg-board::before {
    background-image: url("../images/board/blue-marble.jpg")
}

body[data-board=blue-marble] .is2d coords {
    ---cg-ccw: #eae6dd;
    ---cg-ccb: #7c7f87;
    ---cg-cs: none
}

body[data-board=canvas] .is2d cg-board::before {
    background-image: url("../images/board/canvas2.jpg")
}

body[data-board=canvas] .is2d coords {
    ---cg-ccw: #d7daeb;
    ---cg-ccb: #547388;
    ---cg-cs: none
}

body[data-board=wood] .is2d cg-board::before {
    background-image: url("../images/board/wood.jpg")
}

body[data-board=wood] .is2d coords {
    ---cg-ccw: #d8a45b;
    ---cg-ccb: #9b4d0f;
    ---cg-cs: none
}

body[data-board=wood2] .is2d cg-board::before {
    background-image: url("../images/board/wood2.jpg")
}

body[data-board=wood2] .is2d coords {
    ---cg-ccw: #a38b5d;
    ---cg-ccb: #6c5017;
    ---cg-cs: none
}

body[data-board=wood3] .is2d cg-board::before {
    background-image: url("../images/board/wood3.jpg")
}

body[data-board=wood3] .is2d coords {
    ---cg-ccw: #d0ceca;
    ---cg-ccb: #755839;
    ---cg-cs: none
}

body[data-board=wood4] .is2d cg-board::before {
    background-image: url("../images/board/wood4.jpg")
}

body[data-board=wood4] .is2d coords {
    ---cg-ccw: #caaf7d;
    ---cg-ccb: #7b5330;
    ---cg-cs: none
}

body[data-board=maple] .is2d cg-board::before {
    background-image: url("../images/board/maple.jpg")
}

body[data-board=maple] .is2d coords {
    ---cg-ccw: #e8ceab;
    ---cg-ccb: #bc7944;
    ---cg-cs: none
}

body[data-board=maple2] .is2d cg-board::before {
    background-image: url("../images/board/maple2.jpg")
}

body[data-board=maple2] .is2d coords {
    ---cg-ccw: #e2c89f;
    ---cg-ccb: #996633;
    ---cg-cs: none
}

body[data-board=leather] .is2d cg-board::before {
    background-image: url("../images/board/leather.jpg")
}

body[data-board=leather] .is2d coords {
    ---cg-ccw: #d1d1c9;
    ---cg-ccb: #c28e16;
    ---cg-cs: none
}

body[data-board=green] .is2d cg-board::before {
    background-image: url("../images/board/svg/green.svg")
}

body[data-board=green] .is2d coords {
    ---cg-ccw: #ffffdd;
    ---cg-ccb: #6d8753;
    ---cg-cs: none
}

body[data-board=brown] .is2d cg-board::before {
    background-image: url("../images/board/svg/brown.svg")
}

body[data-board=brown] .is2d coords {
    ---cg-ccw: #f0d9b5;
    ---cg-ccb: #946f51;
    ---cg-cs: none
}

body[data-board=pink] .is2d cg-board::before {
    background-image: url("../images/board/pink-pyramid.png")
}

body[data-board=pink] .is2d coords {
    ---cg-ccw: #e8e9b7;
    ---cg-ccb: #ed7272;
    ---cg-cs: none
}

body[data-board=marble] .is2d cg-board::before {
    background-image: url("../images/board/marble.jpg")
}

body[data-board=marble] .is2d coords {
    ---cg-ccw: #93ab91;
    ---cg-ccb: #4f644e;
    ---cg-cs: none
}

body[data-board=green-plastic] .is2d cg-board::before {
    background-image: url("../images/board/green-plastic.png")
}

body[data-board=green-plastic] .is2d coords {
    ---cg-ccw: #f2f9bb;
    ---cg-ccb: #59935d;
    ---cg-cs: none
}

body[data-board=grey] .is2d cg-board::before {
    background-image: url("../images/board/grey.jpg")
}

body[data-board=grey] .is2d coords {
    ---cg-ccw: #b8b8b8;
    ---cg-ccb: #7d7d7d;
    ---cg-cs: none
}

body[data-board=metal] .is2d cg-board::before {
    background-image: url("../images/board/metal.jpg")
}

body[data-board=metal] .is2d coords {
    ---cg-ccw: #c9c9c9;
    ---cg-ccb: #727272;
    ---cg-cs: none
}

body[data-board=olive] .is2d cg-board::before {
    background-image: url("../images/board/olive.jpg")
}

body[data-board=olive] .is2d coords {
    ---cg-ccw: #b8b19f;
    ---cg-ccb: #6d6655;
    ---cg-cs: none
}

body[data-board=newspaper] .is2d cg-board::before {
    background-image: url("../images/board/svg/newspaper.svg")
}

body[data-board=newspaper] .is2d coords {
    ---cg-ccw: #fff;
    ---cg-ccb: #8d8d8d;
    ---cg-cs: none
}

body[data-board=purple] .is2d cg-board::before {
    background-image: url("../images/board/svg/purple.svg")
}

body[data-board=purple] .is2d coords {
    ---cg-ccw: #9f90b0;
    ---cg-ccb: #7d4a8d;
    ---cg-cs: none
}

body[data-board=purple-diag] .is2d cg-board::before {
    background-image: url("../images/board/purple-diag.png")
}

body[data-board=purple-diag] .is2d coords {
    ---cg-ccw: #e5daf0;
    ---cg-ccb: #957ab0;
    ---cg-cs: none
}

body[data-board=ic] .is2d cg-board::before {
    background-image: url("../images/board/svg/ic.svg")
}

body[data-board=ic] .is2d coords {
    ---cg-ccw: #ececec;
    ---cg-ccb: #c1c18e;
    ---cg-cs: none
}

body[data-board=horsey] .is2d cg-board::before {
    background-image: url("../images/board/horsey.jpg")
}

body[data-board=horsey] .is2d coords {
    ---cg-ccw: #f0d9b5;
    ---cg-ccb: #946f51;
    ---cg-cs: none
}

body[data-board=wood-worn] .is2d cg-board::before {
    background-image: url("../images/board/wood-worn.webp")
}

body[data-board=wood-worn] .is2d coords {
    ---cg-ccw: #bd938b;
    ---cg-ccb: #7e4f3b;
    ---cg-cs: none
}

body[data-board=putt-putt] .is2d cg-board::before {
    background-image: url("../images/board/putt-putt.webp")
}

body[data-board=putt-putt] .is2d coords {
    ---cg-ccw: #d8d1c5;
    ---cg-ccb: #6d8b44;
    ---cg-cs: none
}

body[data-board=cocoa] .is2d cg-board::before {
    background-image: url("../images/board/cocoa.webp")
}

body[data-board=cocoa] .is2d coords {
    ---cg-ccw: #d8d1c5;
    ---cg-ccb: #a1806b;
    ---cg-cs: none
}

body[data-board=parchment] .is2d cg-board::before {
    background-image: url("../images/board/parchment.webp")
}

body[data-board=parchment] .is2d coords {
    ---cg-ccw: #c0b19d;
    ---cg-ccb: #946d46;
    ---cg-cs: none
}

.is2d cg-board::before {
    top: 0;
    height: 100%
}

.is2d piece {
    left: 0;
    top: 0;
    width: 12.5%;
    height: 12.5%
}

cg-board {
    top: 0;
    left: 0;
    user-select: none;
    line-height: 0
}

.manipulable cg-board {
    cursor: pointer
}

cg-board::before {
    content: "";
    left: 0;
    width: 100%;
    background-size: cover;
    position: absolute;
    border-radius: inherit;
    box-shadow: inherit
}

body:not(.simple-board) cg-board::before {
    filter: brightness(calc(var(---board-brightness) / 100)) hue-rotate(calc(var(---board-hue) * 3.6deg))
}

html.transp body:not(.simple-board) cg-board::before {
    opacity: calc(var(---board-opacity) / 100);
    filter: hue-rotate(calc(var(---board-hue) * 3.6deg))
}

square {
    position: absolute;
    top: 0;
    left: 0;
    width: 12.5%;
    height: 12.5%;
    pointer-events: none
}

square.move-dest {
    background: radial-gradient(rgba(20, 85, 30, 0.5) 19%, rgba(0, 0, 0, 0) 20%);
    pointer-events: auto
}

square.premove-dest {
    background: radial-gradient(rgba(20, 30, 85, 0.5) 19%, rgba(0, 0, 0, 0) 20%);
    pointer-events: auto
}

square.oc.move-dest {
    background: radial-gradient(transparent 0%, transparent 79%, rgba(20, 85, 0, 0.3) 80%)
}

square.oc.premove-dest {
    background: radial-gradient(transparent 0%, transparent 79%, rgba(20, 30, 85, 0.2) 80%)
}

body[data-board=green] .is2d square.last-move, body[data-board=green-plastic] .is2d square.last-move, body[data-board=marble] .is2d square.last-move {
    background-color: rgba(0, 155, 199, .41)
}

square.last-move {
    will-change: transform;
    background-color: rgba(155, 199, 0, .41)
}

body[data-board=horsey] .is2d square.last-move:not(.move-dest) {
    background: url(../images/board/horsey.last-move.png);
    background-size: cover
}

square.check {
    background: radial-gradient(ellipse at center, rgb(255, 0, 0) 0%, rgb(231, 0, 0) 25%, rgba(169, 0, 0, 0) 89%, rgba(158, 0, 0, 0) 100%)
}

square.selected {
    background-color: rgba(20, 85, 30, .5)
}

body[data-board=horsey] .is2d square.selected {
    background: url(../images/board/horsey.selected.png);
    background-size: cover
}

square.current-premove {
    background-color: rgba(20, 30, 85, .5) !important
}

body[data-board=horsey] .is2d square.current-premove {
    background: url(../images/board/horsey.current-premove.png);
    background-size: cover
}

square.move-dest:hover {
    background: rgba(20, 85, 30, .3)
}

body[data-board=horsey] .is2d square.move-dest:hover {
    background: url(../images/board/horsey.move-dest.png);
    background-size: cover
}

square.premove-dest:hover {
    background: rgba(20, 30, 85, .2)
}

square.bh1 piece {
    opacity: .98
}

piece {
    position: absolute;
    top: 0;
    left: 0;
    width: 12.5%;
    height: 12.5%;
    background-size: cover;
    z-index: 2;
    will-change: transform;
    pointer-events: none
}

piece.dragging {
    cursor: move;
    z-index: 204 !important
}

piece.anim {
    z-index: 3
}

piece.fading {
    z-index: 1;
    opacity: .5
}

piece.ghost {
    opacity: .3
}

cg-container {
    position: absolute;
    width: 100%;
    height: 100%;
    display: block;
    top: 0;
    right: 0
}

cg-container .cg-shapes, cg-container .cg-custom-svgs, cg-auto-pieces {
    overflow: visible;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    pointer-events: none
}

cg-container .cg-shapes {
    opacity: .6;
    z-index: 2
}

cg-container .cg-custom-svgs {
    z-index: 4
}

cg-container .cg-shapes {
    overflow: hidden
}

cg-container .cg-custom-svgs svg {
    overflow: visible
}

cg-auto-pieces {
    z-index: 2
}

cg-auto-pieces piece {
    opacity: .3
}

html:not(.transp) body:not(.simple-board).coords-in coord, html:not(.transp) body:not(.simple-board) cg-board piece, html:not(.transp) body:not(.simple-board) cg-board square {
    filter: brightness(calc(0.3 + 0.0059 * min(120, var(---board-brightness))))
}

html.transp body:not(.simple-board) cg-board piece, html.transp body:not(.simple-board) cg-board square {
    opacity: min(1, .5 + var(---board-opacity) / 100)
}
